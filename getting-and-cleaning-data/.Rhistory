csvURL = "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
?download.file
download.file( url = csvURL, destfile = "bspeed.csv", method = 'auto' )
df = read.csv( "bspeed.csv" )
getwd()
library( xlsx )
install.packages("xlsx")
library( xlsx )
library( rJava )
library(XML)
install.packages("XML")
library(XML)
xmlURL = "http://www.w3schools.com/xml/simple.xml"
xmlDoc = xmlTreeParse( xmlURL, useInternalNodes = TRUE )
rootNode = xmlRoot(xmlDoc)
xmlName( rootNode )
names( rootNode )
rootNode[[1]]
rootNode[[1]][[1]]
rootNode["food"]
rootNode["food"]["name"]
rootNode["food"]["food"]
rootNode["food"]["food"]["name"]
rootNode["food"]["food"][[1]]
rootNode["food"]["food"]["food"]
rootNode[["food"]]
rootNode[["food"]][["name"]]
xmlSApply( rootNode, xmlValue )
install.packageS("XPath")
install.packages("XPath")
install.packages("xpath")
xpathSApply( rootNode, "//name", xmlValue )
xpathSApply( rootNode, "//price", xmlValue )
hURL = "http://espn.go.com/nfl/team/_/name/bal/baltimore-ravens"
hDoc = htmlTreeParse( hURL, useInternalNodes = TRUE )
score = xpathSApply( hDoc, "//li[@class='score']", xmlValue )
team = xpathSApply( hDoc, "//li[@class='team-name']", xmlValue )
score
names(hDoc)
hURL = "http://espn.go.com/nfl/team/_/name/bal/baltimore-ravens"
hDoc = htmlTreeParse( hURL, useInternalNodes = TRUE )
names(hDoc)
hDoc[[1]]
install.packages("jsonlite")
library(jsonlite)
jsonData = fromJSON("https://api.github.com/users/jtleek/repos")
names(jsonData)
names( jsonData$owner )
View(jsonData)
jsonData$owner$login
install.packages("data.table")
library(data.table)
df = data.frame( x = rnorm(9), y = rep((c("a","b","c"), each = 3), ), z = rnorm(9) )
df = data.frame( x = rnorm(9), y = rep( c("a","b","c"), each = 3), ), z = rnorm(9) )
df = data.frame( x = rnorm(9), y = rep( c("a","b","c"), each = 3), z = rnorm(9) )
head(df, 3 )
dt = data.table( x = rnorm(9), y = rep( c("a","b","c"), each = 3), z = rnorm(9) )
head(dt, 3)
tables()
dt[2,]
dt[ dt$y == "a" ]
dt( c(2,3) )
dt[ c(2,3) ]
df[ c(2,3) ]
{ x = 1, y = 2 }
{ x = 1 y = 2 }
{
x = 1
y = 2
}
k = { print(10); 5 }
print(k)
dt[, list( mean(x), sum(z) ) ]
dt[ , table(y) ]
dt[, w := z^2 ] # Add col "w" that gets z squared
dt
dt[ , m := { tmp <- (x+z); log2(tmp+5) } ]
dt
dt[ , a := x > 0 ] # New col "a" stores rows where x is greater than 0
dt
dt[,b := mean( x + w ), by = a ]
dt
set.seed(123)
dt2 = data.table( x = sample( letters[1:3], 1E5, TRUE ) )
dt2[, .N, by=x ]
dt = data.table( x = rep( c("a","b","c"), each = 100 )m y = rnorm(100) )
dt = data.table( x = rep( c("a","b","c"), each = 100 ), y = rnorm(100) )
setkey( dt, x )
head( dt['a'] )
head( dt['a'], 20 )
rm( list = ls() )
dt1 = data.table( x = c('a', 'a', 'b', 'dt1' ), y = 1:4 )
dt2 = data.table( x = c( 'a', 'b'm 'dt2' ), z = 5:7 )
dt2 = data.table( x = c( 'a', 'b', 'dt2' ), z = 5:7 )
setkey( dt1, x ); setkey( dt2, x )
merge( dt1, dt2 )
dt1
dt2
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
rm( list = ls() )
fURL = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file( fURL, destfile = "quiz1q1.csv" )
df <- read.csv( "quiz1q1.csv" )
names( df )
sum( df$VAL > 24 )
View(df)
sum( df$VAL[ !is.na( df$VAL ) ] > 24 )
dfVal = df$VAL
head( dfVal )
dfVal[ !is.na( dfVal ) ]
dfVal = dfVal[ !is.na( dfVal ) ]
sum( dfVal == 24 )
sum( df$VAL[ !is.na( df$VAL ) ] == 24 )
rm() dfVal )
rm( "dfVal" )
install.packages( "rjava" )
install.packages( "rJava" )
library( rJava )
library( rJava )
library( xlsx )
setwd( "week1_quiz" )
download.file( "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile = "natural_gas_acq.xlsx" )
df <- read.xlsx( "natural_gas_acq.xlsx", sheetIndex = 1, header = TRUE, colIndex = 7:15, rowIndex = 18:23 )
df <- read.xlsx( "natural_gas_acq.xlsx", sheetIndex = 1, header = TRUE )
rm( "df" )
fp = "getdata-data-DATA.gov_NGAP.xlsx"
df <- read.xlsx( fp, sheetIndex = 1, header = TRUE, colIndex = 7:15, rowIndex = 18:23 )
sum( df$Zip * dat$Ext, na.rm = T )
sum( df$Zip * df$Ext, na.rm = T )
rm( "df" )
fp = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
download.file( fp, destfile = "baltimore_restaurants.xml" )
library( XML )
xmlDoc = xmlTreeParse( fp, useInternalNodes = TRUE )
xmlDoc = xmlTreeParse( "baltimore_restaurants.xml", useInternalNodes = TRUE )
rootNode = xmlRoot(xmlDoc)
xpathSApply( rootNode, "//zipcode", xmlValue )
r = xpathSApply( rootNode, "//zipcode", xmlValue )
sum( r == 21231 )
rm( list = ls() )
fp = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file( fp, destfile = "am_community_survey.csv" )
DT = fread( "am_community_survey.csv" )
View(DT)
class( DT$pwgtp15 )
mean( DT$pwgtp15 )
system.time( sapply(split(DT$pwgtp15,DT$SEX),mean) )
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time( sapply(split(DT$pwgtp15,DT$SEX),mean) )
system.time( mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15) )
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time( { mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15) } )
system.time( mean(DT$pwgtp15,by=DT$SEX) )
mean(DT$pwgtp15,by=DT$SEX)
DT[,mean(pwgtp15),by=SEX]
system.time( DT[,mean(pwgtp15),by=SEX] )

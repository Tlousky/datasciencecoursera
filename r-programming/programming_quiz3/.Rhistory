outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ncol(outcome)
dim(outcome)
names(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
hist(outcome[, 11], xlab = names(outcome)[[11]] )
levels(factor(outcome$Hospital.Name))
levels(factor(outcome$State))
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(
toupper( substring(s, 1,1)),
substring(s, 2),
sep      = ".",
collapse = ""
)
}
simpleCap("heart attack")
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(
toupper( substring(s, 1,1)),
substring(s, 2),
sep      = "",
collapse = "."
)
}
simpleCap("heart attack")
simpleCap("heart failure")
simpleCap("pneumonia")
state = "TX"
nameStart = "Hospital.30.Day.Death..Mortality..Rates.from."
capitalize <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(
toupper( substring(s,1,1) ),
substring(s, 2),
sep      = "",
collapse = "."
)
}
outcomeName = "heart failure"
fieldName = paste( c( nameStart, capitalize( outcomeName ) ), collapse = "" )
fieldName
r <- filtered <- outcome[ outcome$State == state, ][ order(fieldName) ]
View(r)
r <- filtered <- outcome[ outcome$State == state, ][ order(fieldName), ]
r <- filtered <- outcome[ outcome$State == "NY", ][ order(fieldName), ]
filtered <- outcome[ outcome$State == "NY", ]
View(filtered)
filtered <- outcome[ outcome$State == "NY", ][ order( outcome[[fieldName]]) ]
filtered <- outcome[ outcome$State == "NY", ][ order( outcome[fieldName]) ]
filtered <- outcome[ outcome$State == "NY", ][ order( fieldName ), ]
filtered <- outcome[ outcome$State == "NY", ]
r <- filtered[ order(fieldName) ]
View(r)
r <- filtered[ order(fieldName), ]
View(r)
r <- filtered[ with( filtered, order(fieldName)), ]
View(r)
View(filtered)
r <- filtered[ with( filtered, order(fieldName, "Hospital.Name")), ]
r <- filtered[ with( filtered, order(fieldName, "Hospital.Name"),) ]
View(r)
r <- filtered[ with( filtered, order(fieldName, "Hospital.Name"),), ]
r <- filtered[ with( filtered, order(fieldName, "Hospital.Name"),) ]
filtered <- outcome[ outcome$State == state, c("Hospital.Name", fieldName )]
filtered <- outcome[ outcome$State == state & !is.na(outcome[[fieldName]]), c("Hospital.Name", fieldName )]
filtered <- outcome[ outcome$State == state & !is.na( outcome[[fieldName]] ), c("Hospital.Name", fieldName )]
View(filtered)
outcome[,fieldName] <- as.numeric( outcome[,fieldName] )
filtered <- outcome[ outcome$State == state & !is.na( outcome[[fieldName]] ), c("Hospital.Name", fieldName )]
r <- filtered[ with( filtered, order(fieldName, "Hospital.Name"),) ]
View(r)
r <- filtered[ order(fieldName, "Hospital.Name") ]
r <- filtered[ order(fieldName, "Hospital.Name"), ]
r <- filtered[ ,order(fieldName, "Hospital.Name") ]
r <- filtered[ order(fieldName, "Hospital.Name"), ]
r <- filtered[ order(fieldName, "Hospital.Name") ]
r <- filtered[ filtered[[fieldName]] == min( filtered[[fieldName]] ), ]
filtered <- outcome[ outcome$State == "TX" & !is.na( outcome[[fieldName]] ), c("Hospital.Name", fieldName )]
r <- filtered[ filtered[[fieldName]] == min( filtered[[fieldName]] ), ]
filtered <- outcome[ outcome$State == state & !is.na( outcome[[fieldName]] ), c("Hospital.Name", fieldName, "State" )]
state = "TX"
filtered <- outcome[ outcome$State == state & !is.na( outcome[[fieldName]] ), c("Hospital.Name", fieldName, "State" )]
View(outcome)
state = "AL"
filtered <- outcome[ outcome$State == state & !is.na( outcome[[fieldName]] ), c("Hospital.Name", fieldName, "State" )]
levels(factor(outcome$State))
state = "UT"
filtered <- outcome[ outcome$State == state & !is.na( outcome[[fieldName]] ), c("Hospital.Name", fieldName, "State" )]
state = "AR"
filtered <- outcome[ outcome$State == state & !is.na( outcome[[fieldName]] ), c("Hospital.Name", fieldName, "State" )]
state = "CA"
filtered <- outcome[ outcome$State == state & !is.na( outcome[[fieldName]] ), c("Hospital.Name", fieldName, "State" )]
state = "GA"
filtered <- outcome[ outcome$State == state & !is.na( outcome[[fieldName]] ), c("Hospital.Name", fieldName, "State" )]
state = "MD"
filtered <- outcome[ outcome$State == state & !is.na( outcome[[fieldName]] ), c("Hospital.Name", fieldName, "State" )]
state = "IL"
filtered <- outcome[ outcome$State == state & !is.na( outcome[[fieldName]] ), c("Hospital.Name", fieldName, "State" )]
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz3/best.R')
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz3/best.R')
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz3/best.R')
best("TX", "heart attack")
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz3/best.R')
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz3/best.R')
states = levels(factor(outcome$State))
r <- lapply( states, best, c( outcomeName = "heart attack" ) )
warnings()
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz3/best.R')
r <- sapply( states, best, c( outcomeName = "heart attack" ) )
best("MT", "heart attack")
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz3/best.R')
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz3/best.R')
outcome[,fieldName] <- as.numeric( outcome[,fieldName] )
state = "TX"
filtered <- outcome[ outcome$State == state & !is.na( outcome[[fieldName]] ), c("Hospital.Name", fieldName, "State" )]
filtered[ order( filtered$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure ) ]
filtered <- filtered[ order( filtered$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure ), ]
View(filtered)
filtered[[6]]
filtered[6]
filtered[6,"Hospital.Name"]
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz3/rankhospital.R')
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz3/rankhospital.R')
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
View(filtered)
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz3/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz3/best.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
?tapply
View(outcome)
states = levels(factor(outcome$State))
sapply( states, function (x) { rankhospital(x, outcomeName, num ) } )
sapply( states, function (x) { rankhospital(x, "heart attack", 3 ) } )
sapply( states, function (x) { rankhospital(x, "heart attack", 3 ) }, USE.NAMES = FALSE )
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz3/rankall.R')
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)

test <- read.csv( "specdata/001.csv" )
test
test[0,]
test[1,]
test[1,'sulfate']
test2 <- read.csv( "specdata/002.csv" )
s1 <- test[,'sulfate']
s1 <- s1[ !is.na(s1) ]
s2 <- test2[,'sulfate']
s2 <- s2[ !is.na(s2) ]
s1[1]
length( s1 )
sall = append(s1, s2 )
length(sall)
length(s2)
library( stringr )
str_pad(1, 3, pad = "0")
str_pad(300, 3, pad = "0")
str_pad(72, 3, pad = "0")
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/prog_quiz2.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/prog_quiz2.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/prog_quiz2.R')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/prog_quiz2.R')
df <- data.frame()
df.append( list( a = 1, b = 2, c = 3 ) )
append( df, list( a = 1, b = 2, c = 3 ) )
df
df <- append( df, list( a = 1, b = 2, c = 3 ) )
df
df <- append( df, list( a = 5, b = 4, c = 6 ) )
df
df <- data.frame()
names(df) <- c('a','b','c')
ncols( df ) <- 3
rcols( df ) <- 3
ncol( df ) <- 3
ncol
ncol( df )
ncol( df ) <- 3
summary <- data.frame( id = character(), nobs = numeric() )
summary
summary[1,'id'] <- '001'
summary
summary[1,'id'] <- '001'
summary[1] <- list( id = '001', nobs = 123 )
summary[1,:] <- list( id = '001', nobs = 123 )
summary[1,] <- list( id = '001', nobs = 123 )
summary
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/prog_quiz2.R')
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/prog_quiz2.R')
complete("specdata", 1)
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/prog_quiz2.R')
complete("specdata", 1)
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/prog_quiz2.R')
complete("specdata", 1)
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/prog_quiz2.R')
complete("specdata", 1)
rm( list = ls() )
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/prog_quiz2.R')
complete("specdata", 1)
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/prog_quiz2.R')
complete("specdata", 1)
rm( list = ls() )
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/prog_quiz2.R')
complete("specdata", 1)
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/prog_quiz2.R')
complete("specdata", 1)
rm( list = ls() )
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/prog_quiz2.R')
complete("specdata", 1)
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/prog_quiz2.R')
rm( list = ls() )
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/prog_quiz2.R')
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/prog_quiz2.R')
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/prog_quiz2.R')
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/prog_quiz2.R')
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/prog_quiz2.R')
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/prog_quiz2.R')
?cor
v <- c()
v <- c( v, 1 )
v
v <- c( v, 2 )
v
library( stringr )
source( 'complete.R' )
loadMonitorfile <- function( directory, id ) {
id <- str_pad(id, 3, pad = "0")                                          # Pad leading zeros
monitorData <- read.csv( paste( directory, "/", id, ".csv", sep = '' ) ) # Load monitor data
return( monitorData )
}
corr <- function( directory, threshold = 0 ) {
completeObs <- complete( directory, 1:332 )
filtered    <- completeObs[ completeObs['nobs'] > threshold ]
correlations = c()
for( id in filtered['id'] ) {
monitorData <- loadMonitorfile( directory, id )
sulfate     <- monitorData[,'sulfate']
nitrate     <- monitorData[,'nitrate']
corVal      <- cor( sulfate, nitrate, use = pairwise.complete.obs )
correlations <- c( correlations, corVal )
}
return ( correlations )
}
cr <- corr("specdata", 150)
library( stringr )
loadMonitorfile <- function( directory, id ) {
id <- str_pad(id, 3, pad = "0")                                          # Pad leading zeros
monitorData <- read.csv( paste( directory, "/", id, ".csv", sep = '' ) ) # Load monitor data
return( monitorData )
}
complete <- function( directory, idVec ) {
completeObs <- data.frame( id = character(), nobs = numeric(), stringsAsFactors = FALSE )
for( id in idVec ) {
monitorData <- loadMonitorfile( directory, id )
sulfate     <- monitorData[,'sulfate']
nitrate     <- monitorData[,'nitrate']
both        <- !is.na( sulfate ) & !is.na( nitrate )
nobs <- length( sulfate[ both ] )
completeObs[ nrow(completeObs) + 1, ] <- list( id = id, nobs = nobs )
}
return ( completeObs )
}
complete( 'specdata', 1:332 )
cobs <- complete( 'specdata', 1:332 )
cobs[ cobs['nobs'] > 150 ]
filt <- cobs[ cobs['nobs'] > 150 ]
filtered['id']
filt['id']
cobs
names(cobs)
cobs['id']
cobs[ cobs['nobs'] > 150 ]
cobs[[] cobs['nobs'] > 150 ]]
cobs[[ cobs['nobs'] > 150 ]]
cobs[ cobs['nobs'] > 150, : ]
cobs[ cobs['nobs'] > 150,]
library( stringr )
source( 'complete.R' )
loadMonitorfile <- function( directory, id ) {
id <- str_pad(id, 3, pad = "0")                                          # Pad leading zeros
monitorData <- read.csv( paste( directory, "/", id, ".csv", sep = '' ) ) # Load monitor data
return( monitorData )
}
corr <- function( directory, threshold = 0 ) {
completeObs <- complete( directory, 1:332 )
filtered    <- completeObs[ completeObs['nobs'] > threshold, ]
correlations = c()
for( id in filtered['id'] ) {
monitorData <- loadMonitorfile( directory, id )
sulfate     <- monitorData[,'sulfate']
nitrate     <- monitorData[,'nitrate']
corVal      <- cor( sulfate, nitrate, use = pairwise.complete.obs )
correlations <- c( correlations, corVal )
}
return ( correlations )
}
cr <- corr("specdata", 150)
cr <- corr("specdata", 150)
v <- rnorm( 30, 5, 5 )
v
for() i in v ) {}
for(i in v ) {
print( i )
}
length( "argh" )
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/corr.R')
cr <- corr("specdata", 150)
cr
head(cr)
summary(cr)
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/corr.R')
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/prog_quiz2.R')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/prog_quiz2.R')
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
out
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
cr
rm( list = ls() )
runif(20)
sample( 1:5, 50 )
sample( 1:10, 5 )
l <- c( 0,0,0,1,2,0,2,4,3,5,6,7,1 )
unique(l)
source('~/GitHub/datasciencecoursera/r-programming/programming_quiz2/corr.R')
library(datasets)
data("mtcars")
mtcars
boxplot( mtcars$hp )
m <- matrix( runif(400,0,100), 100, 4 )
names( m ) <- c( "A", "B", "C", "D" )
boxplot( m )
?boxplot
boxplot( m, names = names(m) )
names(m)
m <- matrix( runif(400,0,100), 100, 4 )
m
colnames( m ) <- c( "A", "B", "C", "D" )
m
boxplot( m, names = names(m) )
boxplot( m, names = colnames(m) )
?boxplot
m[,1] += 20
m[,1] = m[,1] + 20
m[,3:4] = m[,3:4] - 20
boxplot( m, names = colnames(m) )
str( rep ) # Show the arguments of a function
str( ls )
x <- rnorm( 100, 5, 2 )
summary( x )
str( x )
f <- gl( 40, 10 )
str( f )
library(datasets)
head(airquality)
str(airquality)
s <- split( airquality, airquality$Month )
s
s <- split( airquality, airquality$Month )
str( s )
install.packages("plotly")
install.packages("shiny")
str( dnorm )
str(rnorm)
str( pnorm )
str( qnorm )
rnorm(5)
set.seed(1)
rnorm(5)
rnorm(5)
set.seed(1)
rnorm(5)
rnorm(5)
replicate(10, rnorm(10,5,2) )
rnorm(10,5,2)
rnorm(5,5,2)
replicate(10, rnorm(5,5,2) )
replicate(5, rnorm(5,5,2) )
getcwd()
getwd()
file.exists("specdata")
file.exists("C:/tmp")
file.exists("tmp")
